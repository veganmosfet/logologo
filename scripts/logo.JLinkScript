/* EM-FI for TM4C129 */

int SetupTarget(void){
	U32 rv;
	U32 i;
	int r;
	U32 j;
	U32 k;
	U32 EEPROMSIZE;
	U32 l;
	U32 m;
	
	/* first sleep */
	JLINK_SYS_Sleep(1000);
	
	/* halt target */
	r = JLINK_TARGET_Halt();
	
	if (r == 0) {
	JLINK_SYS_Report("Target is halted!");
	} else {
	JLINK_SYS_Report("Error occurred!");
	}	
	
	/* read bootcfg */
	rv = JLINK_MEM_ReadU32(0x400Fe1d0);
	Report1("BOOTCFG: ", rv);

    /* read user reg */
	rv = JLINK_MEM_ReadU32(0x400Fe1e0);
	Report1("USER0: ", rv);
	rv = JLINK_MEM_ReadU32(0x400Fe1e4);
	Report1("USER1: ", rv);
	rv = JLINK_MEM_ReadU32(0x400Fe1e8);
	Report1("USER2: ", rv);
	rv = JLINK_MEM_ReadU32(0x400Fe1ec);
	Report1("USER3: ", rv);

    /* read FLASH config regs */
	l = 0;
	while(l<16) {
		m = 0x400Fe200 + (l*4);
		rv = JLINK_MEM_ReadU32(m);
		Report1("n ", l);
		Report1("FMPRE: ", rv);
		m = 0x400Fe400 + (l*4);
		rv = JLINK_MEM_ReadU32(m);
		Report1("FMPPE: ", rv);
		l = l + 1;
	}

	JLINK_MEM_WriteU32(0x400FE658, 0x00000001);
	
	 /* Reset EEPROM Block */
	JLINK_MEM_WriteU32(0x400FE558, 0x00000001);
	JLINK_MEM_WriteU32(0x400FE558, 0x00000000);

	rv = JLINK_MEM_ReadU32(0x400AF050);
	Report1("EEPROM H1: ", rv);
	rv = JLINK_MEM_ReadU32(0x400AF054);
	Report1("EEPROM H2: ", rv);
	rv = JLINK_MEM_ReadU32(0x400AF058);
	Report1("EEPROM H3: ", rv);

	EEPROMSIZE = JLINK_MEM_ReadU32(0x400AF000);
	Report1("EEPROM SIZE: ", EEPROMSIZE);

	rv = JLINK_MEM_ReadU32(0x400FE358);
	Report1("EEPROM PRESENT: ", rv);
	
	/* read EEPROM data */
	j = 0;
	while(j<96) {
		JLINK_MEM_WriteU32(0x400AF004, j);
		rv = JLINK_MEM_ReadU32(0x400AF030);
		Report1("EEPROM Block N: ", j);
		Report1("EEPROM Prot: ", rv);
		
		k = 0;
		while(k<16) {
			rv = JLINK_MEM_ReadU32(0x400AF014);
			Report1("EEPROM OFFSET: ", k);
			Report1("EEPROM VALUE: ", rv);	
			k = k+1;
		}
		j = j + 1;
	}
	
	/* read FLASH */
	i = 0;
	while(i<0x000FFFFF) {
		rv = JLINK_MEM_ReadU32(i);
		Report1(" ", rv);
		i = i + 4;
	}
	return 0;
}

/*********************************************************************
*
*       ConfigTargetSettings
*/
int ConfigTargetSettings(void) {
  //
  // we manually setup the AP map so the J-Link SW skips the scanning
  //
  Report("J-Link script: Setting up AP map");
  CORESIGHT_AddAP(0, CORESIGHT_AHB_AP);
  CORESIGHT_IndexAPBAPToUse = 1;
  return 0;
}

/*************************** end of file ****************************/
